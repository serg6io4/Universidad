--EJERCICIO 1
SELECT P.ID, NVL(I.TRAMOS, 0)
FROM PROFESORES P 
JOIN INVESTIGADORES I ON I.ID_PROFESOR = P.ID;

--EJERCICIO 2
SELECT P1.APELLIDO1 "Apellido1_Profesor1", P2.APELLIDO1 "Apellido1_Profesor2", P1.TELEFONO "telefono"
FROM PROFESORES P1, PROFESORES P2
WHERE P1.ID < P2.ID AND ((P1.TELEFONO = P2.TELEFONO) OR (P1.TELEFONO IS NULL AND P2.TELEFONO IS NULL));

--EJERCICIO 3
SELECT * FROM(
    SELECT A.DNI, A.FECHA_NACIMIENTO 
    FROM ALUMNOS A
    WHERE A.DNI NOT IN (
        SELECT DISTINCT M.ALUMNO 
        FROM MATRICULAR M
        )
    ORDER BY A.FECHA_NACIMIENTO ASC
    )
WHERE ROWNUM <=3;

--EJERCICIO 4
SELECT DISTINCT P.NOMBRE, P.APELLIDO1, P.APELLIDO2 FROM PROFESORES P
JOIN IMPARTIR I ON I.PROFESOR = P.ID
WHERE i.asignatura = (
    SELECT M.ASIGNATURA FROM MATRICULAR M
    GROUP BY ASIGNATURA
    HAVING COUNT(DISTINCT ALUMNO) = (
        SELECT MAX(COUNT(DISTINCT ALUMNO)) FROM MATRICULAR
        GROUP BY ASIGNATURA
        HAVING 25 > COUNT(DISTINCT ALUMNO) 
    )
    );

--EJERCICIO 5
SELECT ASI.NOMBRE "NombreAsignatura", M.CURSO "Curso",
SUM(DECODE(A.GENERO, 'MASC', 1, 0)) "NumAlumnos",
SUM(DECODE(A.GENERO, 'FEM', 1, 0)) "NumAlumnos"
FROM ASIGNATURAS ASI
JOIN MATRICULAR M ON M.ASIGNATURA = ASI.CODIGO
JOIN ALUMNOS A ON A.DNI = M.ALUMNO
GROUP BY ASI.NOMBRE, M.CURSO;

--EJERCICIO 6
SELECT COUNT(*), TO_CHAR(A.FECHA_PRIM_MATRICULA, 'MM') "Mes"
FROM ALUMNOS A 
GROUP BY TO_CHAR(A.FECHA_PRIM_MATRICULA, 'MM')
HAVING COUNT(*) > (
    SELECT AVG(COUNT(DISTINCT DNI))
    FROM ALUMNOS
    GROUP BY TO_CHAR(FECHA_PRIM_MATRICULA, 'MM')
    )
ORDER BY 2;